"use strict";(self.webpackChunkcluster_factory_ce_docs=self.webpackChunkcluster_factory_ce_docs||[]).push([[5467],{702:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"guides/provisioning/packer-build","title":"Build an OS Image with Packer","description":"SquareOS Image","source":"@site/docs/guides/50-provisioning/02-packer-build.md","sourceDirName":"guides/50-provisioning","slug":"/guides/provisioning/packer-build","permalink":"/docs/guides/provisioning/packer-build","draft":false,"unlisted":false,"editUrl":"https://github.com/deepsquare-io/ClusterFactory/tree/main/web/docs/guides/50-provisioning/02-packer-build.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"docs","previous":{"title":"Using ServiceMonitor to fetch metrics","permalink":"/docs/guides/monitoring/service-monitor"},"next":{"title":"GitOps with Grendel","permalink":"/docs/guides/provisioning/gitops-with-grendel"}}');var i=s(3420),t=s(5404);const a={},o="Build an OS Image with Packer",c={},l=[{value:"SquareOS Image",id:"squareos-image",level:2},{value:"Download",id:"download",level:3},{value:"Build from scratch",id:"build-from-scratch",level:3},{value:"Extracting the kernel, initramfs and create a squashfs for Grendel",id:"extracting-the-kernel-initramfs-and-create-a-squashfs-for-grendel",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"build-an-os-image-with-packer",children:"Build an OS Image with Packer"})}),"\n",(0,i.jsx)(n.h2,{id:"squareos-image",children:"SquareOS Image"}),"\n",(0,i.jsx)(n.h3,{id:"download",children:"Download"}),"\n",(0,i.jsx)(n.p,{children:"The OS image, kernel and initramfs can be downloaded:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://sos-ch-dk-2.exo.io/osimages/squareos-9.2/squareos-9.2.squashfs",children:"OS Image"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://sos-ch-dk-2.exo.io/osimages/squareos-9.2/initramfs-5.14.0-284.30.1.el9_2.x86_64.img",children:"Initramfs"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://sos-ch-dk-2.exo.io/osimages/squareos-9.2/vmlinuz-5.14.0-284.30.1.el9_2.x86_64",children:"Kernel"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"build-from-scratch",children:"Build from scratch"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsxs)(n.a,{href:"https://github.com/deepsquare-io/ClusterFactory/tree/main/packer-recipes",children:[(0,i.jsx)(n.code,{children:"packer-recipes"})," directory inside the git repository"]})," contains examples of Packer configuration files."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hcl",metastring:'title="compute.bare.pkr.hcl"',children:'packer {\n  required_plugins {\n    qemu = {\n      source  = "github.com/hashicorp/qemu"\n      version = "~> 1"\n    }\n  }\n}\n\nvariable "boot_wait" {\n  type    = string\n  default = "3s"\n}\n\nvariable "disk_size" {\n  type    = string\n  default = "50G"\n}\n\nvariable "iso_checksum" {\n  type    = string\n  default = "11e42da96a7b336de04e60d05e54a22999c4d7f3e92c19ebf31f9c71298f5b42"\n}\n\nvariable "iso_url" {\n  type    = string\n  default = "https://download.rockylinux.org/pub/rocky/9.2/isos/x86_64/Rocky-9.2-x86_64-boot.iso"\n}\n\nvariable "memsize" {\n  type    = string\n  default = "2048"\n}\n\nvariable "numvcpus" {\n  type    = string\n  default = "4"\n}\n\nsource "qemu" "compute_bare" {\n  accelerator      = "kvm"\n  boot_command     = ["<up><tab><bs><bs><bs><bs><bs> inst.ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/ks.bare.cfg inst.cmdline<enter><wait>"]\n  boot_wait        = "${var.boot_wait}"\n  communicator     = "none"\n  cpus             = "${var.numvcpus}"\n  disk_size        = "${var.disk_size}"\n  headless         = true\n  http_directory   = "http"\n  iso_checksum     = "${var.iso_checksum}"\n  iso_url          = "${var.iso_url}"\n  memory           = "${var.memsize}"\n  cpu_model        = "host"\n  qemuargs         = [["-serial", "stdio"]]\n  shutdown_timeout = "3h"\n  vnc_bind_address = "0.0.0.0"\n}\n\nbuild {\n  sources = ["source.qemu.compute_bare"]\n}\n\n'})}),"\n",(0,i.jsx)(n.p,{children:"When running Packer, the process is the following:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Launch an HTTP server that serves the ",(0,i.jsx)(n.code,{children:"http"})," directory."]}),"\n",(0,i.jsx)(n.li,{children:"Launch a VM and a VNC session."}),"\n",(0,i.jsxs)(n.li,{children:["Boot on the ISO and enter the ",(0,i.jsx)(n.code,{children:"boot_command"})," to load the RedHat Kickstart file from HTTP."]}),"\n",(0,i.jsx)(n.li,{children:"Run the Kickstart RedHat file. This file automates the installation process of the OS."}),"\n",(0,i.jsx)(n.li,{children:"Shut down the VM."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Configure the installation process by editing the ",(0,i.jsx)(n.code,{children:"http/ks.bare.cfg"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"packages"})," and ",(0,i.jsx)(n.code,{children:"post"})," blocks are probably what you are interested in."]}),"\n",(0,i.jsx)(n.p,{children:"Run packer with:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",metastring:'title="user@local:/ClusterFactory/packer-recipes/rocky9.2"',children:'packer build -var "numvcpus=6" -var "memsize=8000" compute.bare.pkr.hcl\n'})}),"\n",(0,i.jsx)(n.h3,{id:"extracting-the-kernel-initramfs-and-create-a-squashfs-for-grendel",children:"Extracting the kernel, initramfs and create a squashfs for Grendel"}),"\n",(0,i.jsxs)(n.p,{children:["There the script ",(0,i.jsx)(n.code,{children:"export.bare.sh"})," which can help you extract the kernel, initramfs and create a squashfs."]}),"\n",(0,i.jsx)(n.p,{children:"You must run it by root."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",metastring:'title="export.bare.sh"',children:"# Mount the disk\nsource ./scripts-local/setup-nbd\n\n# Extract initramfs and kernel\n./scripts-local/exec-dracut\n\n# Squash the image\nOUTPUT=squareos-9.2.squashfs ./scripts-local/squash-root\n\n# Unmount the disk\nsource ./scripts-local/teardown-nbd\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},5404:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var r=s(6672);const i={},t=r.createContext(i);function a(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);